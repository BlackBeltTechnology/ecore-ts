name: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The new version to release (e.g., 1.0.1)"
        required: true
        type: string


env:
  GITHUB_EVENT_INPUTS_VERSION: ${{ github.event.inputs.version }}

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: setup git config
        run: |
          git config user.name "blackbelt-oss"
          git config user.email "oss@blackbelt.hu"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Update version
        run: |
          pnpm version ${GITHUB_EVENT_INPUTS_VERSION} --no-git-tag-version
          echo "Updated version to ${GITHUB_EVENT_INPUTS_VERSION}"

      - name: Install dependencies
        run: pnpm install

      - name: Build the package
        run: pnpm run build

      - name: Run tests
        run: pnpm run test

      - name: Authenticate with NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Commit version bump
        run: |
          git add package.json pnpm-lock.yaml
          git commit -m "Release version ${GITHUB_EVENT_INPUTS_VERSION}"

      - name: Create version tag
        run: |
          git tag v${GITHUB_EVENT_INPUTS_VERSION}

      - name: Publish to NPM
        run: pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push version and tag
        run: |
          git push origin HEAD v${GITHUB_EVENT_INPUTS_VERSION}
